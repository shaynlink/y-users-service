{
  "openapi": "3.1.1",
  "info": {
    "title": "Users API",
    "summary": "Users API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://staging.stk.re/v1",
      "description": "Staging server"
    },
    {
      "url": "https://api.stk.re/v1",
      "description": "Production server"
    }
  ],
  "paths": {
    "/users/me": {
      "summary": "Get current user",
      "description": "Get current user",
      "get": {
        "summary": "Get current user",
        "operationId": "GetCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithEmail"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      },
      "patch": {
        "summary": "Update current user",
        "operationId": "UpdateCurrentUser",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserWithEmail"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/me/following": {
      "summary": "Get following users of current user",
      "description": "Get following users of current user",
      "get": {
        "summary": "Get following users of current user",
        "operationId": "GetFollowingForCurrentUser",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Following users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/me/follower": {
      "summary": "Get followers users of current user",
      "description": "Get followers users of current user",
      "get": {
        "summary": "Get followers users of current user",
        "operationId": "GetFollowerForCurrentUser",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get followers users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{userId}": {
      "summary": "Get specific user",
      "description": "Get specific user",
      "get": {
        "summary": "Get specific user",
        "operationId": "GetUserById",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BasicUser"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/users/{userId}/following": {
      "summary": "Get following users of targeting user",
      "description": "Get following users of targeting user",
      "get": {
        "summary": "Get following users of targeting user",
        "operationId": "GetFollowingByUserId",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Following users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{userId}/follower": {
      "summary": "Get followers users of targeting user",
      "description": "Get followers users of targeting user",
      "get": {
        "summary": "Get followers users of targeting user",
        "operationId": "GetFollowerByUserId",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Get followers users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BasicUser"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/users/{userId}/follow": {
      "summary": "Follow user",
      "description": "Follow user",
      "put": {
        "summary": "Follow user",
        "operationId": "FollowUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User followed"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "summary": "Unfollow user",
        "operationId": "UnfollowUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "allowEmptyValue": false
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "User unfollowed"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BasicUser": {
        "type": "object",
        "required": [
          "username"
        ],
        "properties": {
          "username": {
            "type": "string",
            "description": "Username",
            "example": "user"
          },
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "user@example.com",
            "uniqueItems": true
          },
          "picture": {
            "type": "string",
            "format": "uri",
            "description": "URL of the user's profile picture",
            "example": "https://example.com/picture.jpg"
          }
        }
      },
      "UserWithEmail": {
        "type": "object",
        "required": [
          "email"
        ],
        "properties": {
          "$ref": "#/components/schemas/BasicUser",
          "email": {
            "type": "string",
            "format": "email",
            "description": "Email address of the user",
            "example": "user@example.com"
          }
        }
      }
    }
  }
}